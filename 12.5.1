class Parent {
  constructor (Device) {
    this.type = Device;
    this.name = 'Powerbank';
    this.turn = 'TurnOn';
  }
  getInfo () {
  return 'This device is' + this.name;
 }
}

class Phone extends Parent {
  constructor(name, device) {
    super(device);
    this.ownName = 'Iphone';
    this.power = '18W';
  }
  getInfo () {
    console.log('This is ' + this.ownName + ' and it have ' + this.power)
  }
}

class Notebook extends Parent {
  constructor(name, device) {
    super(device);
    this.ownName = 'Asus';
    this.power = '70W';
  }
  getInfo () {
    console.log('This is ' + this.ownName + ' and it have ' + this.power)
  }
}

const notebook = new Notebook ();
notebook.getInfo ();
//const phone = new Phone ();
//phone.getInfo();

// В этом задании ситуация уже лучше, чем в предыдущем: связь между родительским классом и дочерними определена верно. Однако всё равно есть проблемы:
// 1. Нет методов, отвечающих за включение\выключение прибора
// 2. Метод getInfo повторяется в каждом классе и выполняют по сути одну и ту же функцию. Этот метод нужно оставить в родительском классе (Parent), в дочерних он по умолчанию будет доступен. В дочерних же классах должны быть свои методы.
// Попробуйте на основе примера правильного решения, которое я дала вам в предыдущем задании, провести работу над ошибками и переделать этот пример